やつたこと
    ゼミ発表
        前期で使った資料をほぼ使ひ回したので特に練習もせずに行った．
            爆死した．
        英語での質疑は相変はらず上手くできない．
            そもそもマスクしてて聞き取りにくい．
    精進 4 問解いた．
        入水して引退したいので精進をし始めることにした．
            水 diff と緑 diff のどちらを埋めるか迷ったので，中間の diff 1000 あたりを埋めることにする．
        <a href="https://atcoder.jp/contests/abc145/tasks/abc145_d">ABC 145 D</a>
            X = 2n + m, Y = 2m + n を満たす自然数 n, m が存在しなければ 0，存在すれば (n+m)! / n!m! が答へ，といふのはすぐわかる．どうやってこれを求めるんだ？
            色々試行錯誤したが結局 Google で調べるのが早かった．
                参考: https://ikatakos.com/pot/programming_algorithm/number_theory/mod_combination
        <a href="https://atcoder.jp/contests/abc218/tasks/abc218_c">ABC 218 C</a>
            左上（座標が辞書順最小のもの）を揃へるやうに移動し，それが一致するかチェックする，といふ操作を T の 0, 90, 180, 270 度回転全てについて調べればいい．
            回転の仕方がわからなかったが，通常 (X, Y) を 90 度回すと (-Y, X) なので，第一象限に戻すために x 座標に N を加へればよい．
                よく考へたら左上を揃へる段階でどうせ第一象限に戻る．
        <a href="https://atcoder.jp/contests/abc218/tasks/abc218_e">ABC 218 E</a>
            C_i < 0 の辺の存在意義がよくわからないので，ないものとして考へてみると最小全域木がわかればいい．
            Kruskal 法のアルゴリズムをちょっと改変して AC．
                辺を重み昇順にソート．
                辺 uv に対して， u と v が連結でないか， uv の重みが負ならば，辺集合から辺を除去．
                最終的に残った辺の重みを求める．
            普通に UnionFind と貪欲法を使ってるだけである．そもそも Kruskal 法が UnionFind と貪欲法の組合せでは．
        <a href="https://atcoder.jp/contests/agc038/tasks/agc038_a">AGC 38 A<a>
            左上に高さ B 幅 A の矩形を，右下に 高さ (H-B) 幅 (W-A) の矩形を書けばいつでも条件を達成できる．
        4 問で大体 2 時間ちょい（上から 50, 30, 20, 30 分くらゐ）だった．

明日やること
    学会発表のレジスト

けふの酒
    ヱビス　プレミアムメルツェン
        ゼミ発表頑張ったし．
